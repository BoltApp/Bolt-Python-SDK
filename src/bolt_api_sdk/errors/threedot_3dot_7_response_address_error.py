"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .threedot_3dot_7_error import ThreeDot3Dot7ErrorData
from .threedot_3dot_7_field_error import ThreeDot3Dot7FieldErrorData
from bolt_api_sdk.errors import BoltError
from dataclasses import dataclass, field
import httpx
from typing import Optional, Union
from typing_extensions import TypeAliasType


ThreeDot3Dot7ResponseAddressErrorUnion = TypeAliasType(
    "ThreeDot3Dot7ResponseAddressErrorUnion",
    Union[ThreeDot3Dot7ErrorData, ThreeDot3Dot7FieldErrorData],
)
r"""The address is invalid and cannot be added, or some other error has occurred"""


@dataclass(frozen=True)
class ThreeDot3Dot7ResponseAddressError(BoltError):
    r"""The address is invalid and cannot be added, or some other error has occurred"""

    data: ThreeDot3Dot7ResponseAddressErrorUnion = field(hash=False)

    def __init__(
        self,
        data: ThreeDot3Dot7ResponseAddressErrorUnion,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        object.__setattr__(self, "data", data)
