"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from bolt_api_sdk.errors import BoltError
from bolt_api_sdk.models import threedot_3dot_7_error as models_threedot_3dot_7_error
from bolt_api_sdk.types import BaseModel
from dataclasses import dataclass, field
import httpx
import pydantic
from typing import Optional
from typing_extensions import Annotated


class ThreeDot3Dot7ErrorData(BaseModel):
    dot_tag: Annotated[
        models_threedot_3dot_7_error.ThreeDot3Dot7ErrorTag, pydantic.Field(alias=".tag")
    ]
    r"""The type of error returned"""

    message: str
    r"""A human-readable error message, which might include information specific to the request that was made."""


@dataclass(frozen=True)
class ThreeDot3Dot7Error(BoltError):
    data: ThreeDot3Dot7ErrorData = field(hash=False)

    def __init__(
        self,
        data: ThreeDot3Dot7ErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        fallback = body or raw_response.text
        message = str(data.message) or fallback
        super().__init__(message, raw_response, body)
        object.__setattr__(self, "data", data)
