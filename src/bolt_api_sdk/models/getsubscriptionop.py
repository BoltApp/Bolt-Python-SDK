"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from bolt_api_sdk.types import BaseModel
from bolt_api_sdk.utils import FieldMetadata, PathParamMetadata, SecurityMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


GET_SUBSCRIPTION_OP_SERVERS = [
    # The Production URL (Live Data).
    "https://api.bolt.com",
    # The Sandbox URL (Test Data).
    "https://api-sandbox.bolt.com",
    # The Staging URL (Staged Data).
    "https://api-staging.bolt.com",
]


class GetSubscriptionSecurityTypedDict(TypedDict):
    v1_x_api_key: NotRequired[str]
    v1_x_publishable_key: NotRequired[str]


class GetSubscriptionSecurity(BaseModel):
    v1_x_api_key: Annotated[
        Optional[str],
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="apiKey",
                sub_type="header",
                field_name="X-API-Key",
            )
        ),
    ] = None

    v1_x_publishable_key: Annotated[
        Optional[str],
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="apiKey",
                sub_type="header",
                field_name="X-Publishable-Key",
            )
        ),
    ] = None


class GetSubscriptionRequestTypedDict(TypedDict):
    subscription_id: int
    r"""ID of the subscription to retrieve."""


class GetSubscriptionRequest(BaseModel):
    subscription_id: Annotated[
        int,
        pydantic.Field(alias="subscriptionId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""ID of the subscription to retrieve."""
