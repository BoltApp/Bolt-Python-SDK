"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .v1_webhookbody import V1WebhookBody, V1WebhookBodyTypedDict
from bolt_api_sdk.types import BaseModel
from bolt_api_sdk.utils import (
    FieldMetadata,
    HeaderMetadata,
    RequestMetadata,
    SecurityMetadata,
)
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


SUBSCRIPTION_WEBHOOKS_OP_SERVERS = [
    # The Production URL (Live Data).
    "https://api.bolt.com",
    # The Sandbox URL (Test Data).
    "https://api-sandbox.bolt.com",
    # The Staging URL (Staged Data).
    "https://api-staging.bolt.com",
]


class SubscriptionWebhooksSecurityTypedDict(TypedDict):
    v1_api_key_auth: str


class SubscriptionWebhooksSecurity(BaseModel):
    v1_api_key_auth: Annotated[
        str,
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="apiKey",
                sub_type="header",
                field_name="Authorization",
            )
        ),
    ]


class SubscriptionWebhooksRequestTypedDict(TypedDict):
    v1_webhook_body: V1WebhookBodyTypedDict
    x_bolt_hmac_sha256: NotRequired[str]
    r"""Signed HMAC for hook verification"""


class SubscriptionWebhooksRequest(BaseModel):
    v1_webhook_body: Annotated[
        V1WebhookBody,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]

    x_bolt_hmac_sha256: Annotated[
        Optional[str],
        pydantic.Field(alias="X-Bolt-Hmac-Sha256"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None
    r"""Signed HMAC for hook verification"""
