"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from bolt_api_sdk.types import BaseModel
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class ThreeDot3Dot7GetAccessTokenResponseTypedDict(TypedDict):
    id_token: NotRequired[str]
    r"""A JSON Web Token (JWT) issued when the request includes the scope open_id."""
    access_token: NotRequired[str]
    r"""An access token you can use to make requests on behalf of a Bolt shopper."""
    expires_in: NotRequired[int]
    r"""The access token's expiration, in seconds."""
    refresh_token: NotRequired[str]
    r"""A refresh token you can use to issue a brand new access token without obtaining a new authorization code."""
    refresh_token_scope: NotRequired[str]
    r"""The scope granted to the refresh token. Currently, refreshed token will only grant view permissions."""
    scope: NotRequired[str]
    r"""The scope granted to access token, depending on the scope granted to the authorization code as well as the scope parameter. Options include `bolt.account.manage`, `bolt.account.view`, `openid`. Multiple values can be returned as space-separated strings."""
    token_type: NotRequired[str]
    r"""The token_type will always be bearer."""


class ThreeDot3Dot7GetAccessTokenResponse(BaseModel):
    id_token: Optional[str] = None
    r"""A JSON Web Token (JWT) issued when the request includes the scope open_id."""

    access_token: Optional[str] = None
    r"""An access token you can use to make requests on behalf of a Bolt shopper."""

    expires_in: Optional[int] = None
    r"""The access token's expiration, in seconds."""

    refresh_token: Optional[str] = None
    r"""A refresh token you can use to issue a brand new access token without obtaining a new authorization code."""

    refresh_token_scope: Optional[str] = None
    r"""The scope granted to the refresh token. Currently, refreshed token will only grant view permissions."""

    scope: Optional[str] = None
    r"""The scope granted to access token, depending on the scope granted to the authorization code as well as the scope parameter. Options include `bolt.account.manage`, `bolt.account.view`, `openid`. Multiple values can be returned as space-separated strings."""

    token_type: Optional[str] = None
    r"""The token_type will always be bearer."""
